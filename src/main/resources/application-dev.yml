spring:
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        druid:
#            driver-class-name: com.mysql.jdbc.Driver
            driver-class-name: com.mysql.cj.jdbc.Driver
            url: jdbc:mysql://localhost:3306/springbootlearn?serverTimezone=UTC
            username: root
            password: 123456
            initialsize: 10
            max-active: 100
            min-idle: 10
            max-wait: 60000
            pool-prepared-statements: true
            max-pool-prepared-statement-per-connection-size: 20
            time-between-eviction-runs-millis: 60000
            min-evictable-idle-time-millis: 300000
            #Oracle需要打开注释
            #validation-query: SELECT 1 FROM DUAL
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            stat-view-servlet:
                enabled: true
                url-pattern: /druid/*
                #login-username: admin
                #login-password: admin
            filter:
                stat:
                    log-slow-sql: true
                    slow-sql-millis: 1000
                    merge-sql: false
                wall:
                    config:
                        multi-statement-allow: true
#redis 配置不上传
    redis:
      host: 47.94.94.78
      port: 6379
      password: redis
#rabbitmq配置
    rabbitmq:
      host: 192.168.227.128
      port: 5672
      virtual-host: /
      publisher-confirms: true
      publisher-returns: true
      #只要抵达队列以异步方式优先调用 returns
      template:
        mandatory: true
#手动ack消息
      listener:
        simple:
          acknowledge-mode: manual

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#解决定制rabbitTemplate注入问题
management:
  health:
    rabbit:
      enabled: false

##多数据源的配置
#dynamic:
#  datasource:
#    slave1:
#      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
#      url: jdbc:sqlserver://localhost:1433;DatabaseName=renren_security
#      username: sa
#      password: 123456
#    slave2:
#      driver-class-name: org.postgresql.Driver
#      url: jdbc:postgresql://localhost:5432/renren_security
#      username: renren
#      password: 123456
